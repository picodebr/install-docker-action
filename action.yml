name: install-docker-action

description: install docker and docker-compose in ubuntu machines

inputs:
  ssh_host:
    required: true
    description: remote address

  ssh_user:
    description: remote username
    required: true

  ssh_key:
    required: true
    description: ssh private key

  reboot_time:
    default: 60
    description: time in seconds necessary for the remote host to completely reboot

runs:
  using: composite
  steps:
    - name: Install docker and docker-compose
      if: false
      uses: picodebr/ssh-action@v1.1
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        command: |
          INSTALL_DOCKER=false
          which docker || INSTALL_DOCKER=true

          if [[ "$INSTALL_DOCKER" == "true" ]]; then
            # The following instructions were extracted from https://docs.docker.com/engine/install/ubuntu/

            # 0 - prevent interactive mode
            export DEBIAN_FRONTEND=noninteractive

            # 1 - update the apt package index
            sudo apt-get update -y
            sudo apt-get install \
                ca-certificates \
                curl \
                gnupg \
                lsb-release -y

            # 2 - add docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --batch --yes -o /usr/share/keyrings/docker-archive-keyring.gpg

            # 3 - setup a stable repository
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            # 4 - install docker
            sudo apt-get update -y
            sudo apt-get install docker-ce docker-ce-cli containerd.io -y

            # 5 - create the docker group
            sudo groupadd docker

            # 6 - add the current user permanently to the docker group
            sudo usermod -aG docker $USER

            # 7 - verify the install version
            docker --version

            echo INSTALL_DOCKER_ACTION=done >> ~/.bashrc
            echo "Reboot the system to complete the docker installation."
          else
            echo "Docker already installed. No system reboot is needed."
          fi

          INSTALL_DOCKER_COMPOSE=false
          which docker-compose || INSTALL_DOCKER=true

          if [[ "$INSTALL_DOCKER_COMPOSE" == "true"]]; then
            # The following instructions were extracted from https://docs.docker.com/compose/install/

            # 0 - prevent interactive mode
            export DEBIAN_FRONTEND=noninteractive

            # 1 - setup a stable release
            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

            # 2 - apply executable permission to the binary
            sudo chmod +x /usr/local/bin/docker-compose

            # 3 - check the docker-compose installed version
            docker-compose --version
          fi

    - name: Check if reboot is needed
      if: false
      id: check_reboot
      uses: picodebr/ssh-action@v1.1
      with:
        user: ${{ secrets.SSH_USER }}
        host: ${{ secrets.SSH_HOST }}
        key: ${{ secrets.SSH_KEY }}
        command: echo '$INSTALL_DOCKER_ACTION'

    - name: Reboot the server if necessary
      if: steps.check_reboot.outputs.output != 'done'
      uses: picodebr/ssh-action@v1.1
      with:
        user: ${{ secrets.SSH_USER }}
        host: ${{ secrets.SSH_HOST }}
        key: ${{ secrets.SSH_KEY }}
        commands: sudo reboot

    - name: Wait server reboot if necessary
      if: steps.check_reboot.outputs.output != 'done'
      shell: bash
      run: sleep ${{ inputs.reboot_time }}s
